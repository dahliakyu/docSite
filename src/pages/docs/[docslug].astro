---
import Docs from "@layouts/Docs.astro";
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "src/types";
import DocDetails from "@layouts/DocDetails.astro";
import slugify from "@utils/slugify";

export interface Props {
  doc: MarkdownInstance<Frontmatter>;
  tag: string;
}

type DocResult = {
  params: {
    docslug: string | number;
  };
  props?: {
    doc: MarkdownInstance<Record<string, any>>;
  };
}[];

export async function getStaticPaths() {
  const docs = await Astro.glob<Frontmatter>(
    "../../contents/Documentation/*.md"
  );

  let docResult: DocResult = docs.map(doc => {
    return {
      params: {
        docslug: slugify(doc.frontmatter),
      },
      props: {
        doc,
      },
    };
  });

  return [...docResult];
}

const { doc } = Astro.props;
const docs = await Astro.glob<Frontmatter>("../../contents/Documentation/*.md");
---

{doc ? <DocDetails doc={doc} /> : <Docs docs={docs} />}
