---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LeftSideBar from "@components/LeftSideBar/LeftSideBar.astro";
import RightSideBar from "@components/RightSideBar.astro";
import type { MarkdownHeading } from "astro";
export interface Props {
  frontmatter: {
    title: string;
    description?: string;
  };
  headings: MarkdownHeading[];
}
const headings = Astro.props.headings;

const { title, description } = Astro.props.frontmatter;

const currentPage = Astro.url.pathname;
---

<Layout title={title} description={description}>
  <Header activeNav="docs" />
  <main class="main-display">
    <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
      <LeftSideBar currentPage={currentPage} />
    </aside>
    <div id="grid-main">
      <h1 class="post-title">{title}</h1>
      <article id="article" role="article" class="prose mt-0 text-xl">
        <slot />
      </article>
    </div>
    <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
      <RightSideBar headings={headings} />
    </aside>
  </main>

  <Footer />
  <style>
    .post-title {
      @apply py-8 text-4xl font-semibold text-skin-accent;
    }
    main {
      width: 100%;
      display: grid;
    }

    .main-display {
      display: grid;
      width: 100%;
      height: 100%;
      grid-template-columns: 1.35fr 3fr 1fr;
    }

    .grid-sidebar {
      height: 100vh;
      position: sticky;
      top: 0;
      padding: 0;
    }

    #grid-left {
      position: fixed;
      background-color: var(--theme-bg);
      z-index: 10;
      display: none;
    }

    #grid-main {
      padding: var(--doc-padding) var(--gutter);
      grid-column: 2;
      display: flex;
      flex-direction: column;
      height: 100%;
    }

    #grid-right {
      display: none;
    }
    @media (min-width: 50em) {
      .layout {
        overflow: initial;
        grid-template-columns: 20rem minmax(0, var(--max-width));
        gap: 1em;
      }

      #grid-left {
        display: flex;
        padding-left: 2rem;
        position: sticky;
        grid-column: 1;
      }
    }

    @media (min-width: 72em) {
      .layout {
        grid-template-columns: 20rem minmax(0, var(calc(100% - 1rem))) 18rem;
        padding-left: 0;
        padding-right: 0;
        margin: 0 auto;
      }

      #grid-right {
        grid-column: 3;
        display: flex;
      }
    }
  </style>
</Layout>
